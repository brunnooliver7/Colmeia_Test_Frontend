{"version":3,"sources":["components/professorForm.jsx","components/card.jsx","components/professor.jsx","App.js","serviceWorker.js","index.js"],"names":["props","role","className","placeholder","onChange","handleChange","onKeyUp","e","key","handleSearch","value","pesquisa","Card","list","map","professor","nome","src","imagem","alt","materia","itens","i","length","push","renderDisciplinas","nota","curriculo","bairro","URL","Professor","state","bind","inicializar","axios","get","then","resp","setState","data","event","target","URLsearch","concat","this","Component","App","href","id","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.84bcabf8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default props => {\r\n\r\n    // [Enter] faz a pesquisa\r\n    const keyHandler = (e) => {\r\n        if (e.key === 'Enter') {\r\n            props.handleSearch()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div role='form' className='professor-form'>\r\n            <div className='search-form'> \r\n                <input \r\n                    className='form-control'\r\n                    placeholder='Procure por um professor'\r\n                    onChange={props.handleChange}\r\n                    onKeyUp={keyHandler}\r\n                    value={props.pesquisa}\r\n                    >\r\n                </input>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nconst Card = props => {\r\n\r\n    const renderDisciplinas = (materia) => {\r\n        let itens = []\r\n        for (let i = 0; i < materia.length; i++) { \r\n            itens.push(\r\n                <div className=\"professor-disciplina-itens\" key={i}>\r\n                    {materia[i]}\r\n                </div>\r\n            )\r\n        }\r\n        return(<div>{itens}</div>)\r\n    }\r\n\r\n    const renderCard = () => {\r\n        \r\n        const list = props.list || []\r\n        return list.map(professor => (\r\n\r\n            <div key={professor.nome} className=\"card\">\r\n                <div className=\"top-container\">\r\n                    <div className=\"left-container\" >\r\n                        <img \r\n                            src={professor.imagem}\r\n                            className=\"card-img\"\r\n                            alt='professor-img'\r\n                        />\r\n                    </div>\r\n                    <div className=\"middle-container\">\r\n                        <div className=\"professor-name\">{professor.nome}</div>\r\n                        <div className=\"professor-disciplinas-title\">Disciplinas:</div>\r\n                        <div className=\"professor-disciplinas\">{renderDisciplinas(professor.materia)}</div>\r\n                    </div>\r\n                    <div className=\"right-container\">\r\n                        <div className=\"professor-rating\">\r\n                            {professor.nota}  \r\n                            <img \r\n                                src=\"https://aulascolmeia.com.br/img/rating-star.png\" \r\n                                className=\"professor-star\"\r\n                                alt='star'\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"middle-curriculo\">\r\n                    <div className=\"curriculo-title\">Curr√≠culo <hr/></div>\r\n                    <div className=\"curriculo-body\"><p>{professor.curriculo}</p></div>\r\n                </div>\r\n                <div className=\"bottom-container\">\r\n                    <div className=\"bottom-left\">\r\n                        <div className=\"professor-location\"><img src=\"https://aulascolmeia.com.br/img/marker-icon.png\" alt='marker'/> {professor.bairro}</div>\r\n                    </div>\r\n                    <div className=\"bottom-right\">\r\n                        <div className=\"professor-select\">Selecionar</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        ))\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            {renderCard()}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card","import React, { Component } from 'react'\r\nimport axios from 'axios'\r\n\r\nimport ProfessorForm from './professorForm'\r\n\r\nimport Card from './card'\r\nimport '.././app.css'\r\n\r\nconst URL = 'https://colmeiatest.herokuapp.com/professores'\r\n\r\nexport default class Professor extends Component {\r\n    \r\n    constructor(props) {\r\n        \r\n        super(props)\r\n\r\n        this.state = { \r\n            list: [] \r\n        }\r\n        \r\n        this.handleChange = this.handleChange.bind(this)\r\n        \r\n        this.inicializar()\r\n    }\r\n\r\n    inicializar() {\r\n        axios.get(URL).then(resp => {\r\n            this.setState({...this.state, list: resp.data})\r\n        })\r\n    }\r\n\r\n    handleChange(event) {\r\n        var pesquisa = event.target.value\r\n        var URLsearch = URL.concat('?nome=', pesquisa)\r\n        axios.get(URLsearch).then(resp => {\r\n            this.setState({...this.state, list: resp.data})\r\n        })\r\n    }\r\n        \r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProfessorForm \r\n                    handleChange={this.handleChange}\r\n                    nome={this.state.pesquisa} \r\n                />\r\n                <Card\r\n                    list={this.state.list}  \r\n                />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'\nimport '../node_modules/font-awesome/css/font-awesome.min.css'\nimport './app.css'\n\nimport Professor from './components/professor'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className='container'>\n        <Router>\n          <nav className='navbar navbar-inverse bg-inverse'>\n            <div className='container'>\n              <div className='navbar-header'>\n                <a className='navbar-brand' href='/professores'>\n                  <i className='fa fa-graduation-cap'></i> Professor App\n                </a>\n              </div>\n              <div id='navbar' className='navbar-collapse collapse'>\n                <ul className=\"nav navbar-nav\">\n                  <li><a href='/professores'>Professores</a></li>\n                </ul>\n              </div>\n            </div>\n          </nav>\n          <Route path=\"/\" exact component={Professor} />\n        </Router>\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}